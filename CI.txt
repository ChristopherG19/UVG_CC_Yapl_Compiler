CLASS Main, 184
		PARAM "2 is trivially prime.\n"
		CALL IO.out_string, 0
		LI t0, 2
		SW GP[92], t0
		LW t0, GP[92]
		SW GP[96], t0
		LI t0, 500
		SW GP[104], t0
	Main.main, 64
		GOTO L_LOOP_0
L_LOOP_0:
		IF true = 0 GOTO L_LOOP_END_0
		LW t0, GP[96]
		LI t1, 1
		ADD t2, t0, t1
		SW GP[96], t2
		LI t0, 2
		SW GP[100], t0
		GOTO L_LOOP_1
L_LOOP_1:
		LW t0, GP[96]
		LW t1, GP[100]
		LW t2, GP[100]
		MULT t3, t1, t2
		SLT t1, t0, t3
		IF t1 > 0 GOTO L_TRUE_0
		GOTO L_FALSE_0
L_TRUE_0:
		GOTO L_IF_END_0
L_FALSE_0:
		LW t0, GP[96]
		LW t1, GP[100]
		LW t2, GP[96]
		LW t3, GP[100]
		DIV t4, t2, t3
		MULT t2, t1, t4
		SUB t1, t0, t2
		LI t0, 0
		SEQ t2, t1, t0
		IF t2 > 0 GOTO L_TRUE_1
		GOTO L_FALSE_1
L_TRUE_1:
		GOTO L_IF_END_1
L_FALSE_1:
		GOTO L_IF_END_1
L_IF_END_1:
		GOTO L_IF_END_0
L_IF_END_0:
		IF true = 0 GOTO L_LOOP_END_1
		LW t0, GP[100]
		LI t1, 1
		ADD t2, t0, t1
		SW GP[100], t2
		GOTO L_LOOP_1
L_LOOP_END_1:
		LW t0, GP[96]
		LW t1, GP[100]
		LW t2, GP[100]
		MULT t3, t1, t2
		SLT t1, t0, t3
		IF t1 > 0 GOTO L_TRUE_2
		GOTO L_FALSE_2
L_TRUE_2:
		LW t0, GP[96]
		SW GP[92], t0
		LW t0, GP[92]
		PARAM t0
		CALL IO.out_int, 0
		PARAM " is prime.\n"
		CALL IO.out_string, 0
		GOTO L_IF_END_2
L_FALSE_2:
		LI t0, 0
		GOTO L_IF_END_2
L_IF_END_2:
		LW t1, GP[104]
		LW t2, GP[96]
		SLE t3, t1, t2
		IF t3 > 0 GOTO L_TRUE_3
		GOTO L_FALSE_3
L_TRUE_3:
		CALL "halt".abort, 0
		GOTO L_IF_END_3
L_FALSE_3:
		GOTO L_IF_END_3
L_IF_END_3:
		GOTO L_LOOP_0
L_LOOP_END_0:
		RETURN "continue"
	END FUNC main
EOC
EOF